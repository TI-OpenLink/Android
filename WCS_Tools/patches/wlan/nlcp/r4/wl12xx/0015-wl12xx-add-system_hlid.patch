From e092a94044e894fe48485551819eaa6c2b1cf775 Mon Sep 17 00:00:00 2001
From: Eliad Peller <eliad@wizery.com>
Date: Tue, 5 Apr 2011 02:21:04 +0300
Subject: [PATCH 15/75] wl12xx: add system_hlid

system_hlid is a const hlid (always 0), used by the fw and driver
for packets which are not bound to specific role (e.g. dynamic
memory packets).

TODO: use const instead of allocating
---
 drivers/net/wireless/wl12xx/cmd.h    |    1 +
 drivers/net/wireless/wl12xx/main.c   |    8 ++++++++
 drivers/net/wireless/wl12xx/tx.c     |    4 +++-
 drivers/net/wireless/wl12xx/wl12xx.h |    1 +
 4 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/drivers/net/wireless/wl12xx/cmd.h b/drivers/net/wireless/wl12xx/cmd.h
index 8894741..911d596 100644
--- a/drivers/net/wireless/wl12xx/cmd.h
+++ b/drivers/net/wireless/wl12xx/cmd.h
@@ -44,6 +44,7 @@ int wl1271_cmd_role_start_sta(struct wl1271 *wl);
 int wl1271_cmd_role_stop_sta(struct wl1271 *wl);
 int wl1271_cmd_role_start_ap(struct wl1271 *wl);
 int wl1271_cmd_role_stop_ap(struct wl1271 *wl);
+int wl1271_allocate_link(struct wl1271 *wl, u8 *hlid);
 int wl1271_cmd_test(struct wl1271 *wl, void *buf, size_t buf_len, u8 answer);
 int wl1271_cmd_interrogate(struct wl1271 *wl, u16 id, void *buf, size_t len);
 int wl1271_cmd_configure(struct wl1271 *wl, u16 id, void *buf, size_t len);
diff --git a/drivers/net/wireless/wl12xx/main.c b/drivers/net/wireless/wl12xx/main.c
index 8bee14a..5bfe998 100644
--- a/drivers/net/wireless/wl12xx/main.c
+++ b/drivers/net/wireless/wl12xx/main.c
@@ -1710,6 +1710,13 @@ static int wl1271_op_add_interface(struct ieee80211_hw *hw,
 		if (ret < 0)
 			goto irq_disable;
 
+		/* TODO: we should already disable role if failed... */
+		ret = wl1271_allocate_link(wl, &wl->system_hlid);
+		if (ret < 0)
+			goto irq_disable;
+		wl1271_info("system_hlid: %d", wl->system_hlid);
+		WARN_ON(wl->system_hlid != 0);
+
 		booted = true;
 		break;
 
@@ -4125,6 +4132,7 @@ struct ieee80211_hw *wl1271_alloc_hw(void)
 	wl->platform_quirks = 0;
 	wl->sched_scanning = false;
 	wl->role_id = WL1271_INVALID_ROLE_ID;
+	wl->system_hlid = WL1271_INVALID_LINK_ID;
 	wl->sta_hlid = WL1271_INVALID_LINK_ID;
 	wl->dev_role_id = WL1271_INVALID_ROLE_ID;
 	wl->dev_hlid = WL1271_INVALID_LINK_ID;
diff --git a/drivers/net/wireless/wl12xx/tx.c b/drivers/net/wireless/wl12xx/tx.c
index 8f6103a..88e2542 100644
--- a/drivers/net/wireless/wl12xx/tx.c
+++ b/drivers/net/wireless/wl12xx/tx.c
@@ -379,7 +379,9 @@ static int wl1271_prepare_tx_frame(struct wl1271 *wl, struct sk_buff *skb,
 		}
 	}
 
-	if (wl->bss_type == BSS_TYPE_AP_BSS)
+	if (wl12xx_is_dummy_packet(wl, skb))
+		hlid = wl->system_hlid;
+	else if (wl->bss_type == BSS_TYPE_AP_BSS)
 		hlid = wl1271_tx_get_hlid(skb);
 	else
 		if (test_bit(WL1271_FLAG_STA_ASSOCIATED, &wl->flags))
diff --git a/drivers/net/wireless/wl12xx/wl12xx.h b/drivers/net/wireless/wl12xx/wl12xx.h
index c979f28..5ec6ca1 100644
--- a/drivers/net/wireless/wl12xx/wl12xx.h
+++ b/drivers/net/wireless/wl12xx/wl12xx.h
@@ -412,6 +412,7 @@ struct wl1271 {
 	int channel;
 	u8 role_id;
 	u8 dev_role_id;
+	u8 system_hlid;
 	u8 sta_hlid;
 	u8 dev_hlid;
 
-- 
1.7.0.4

