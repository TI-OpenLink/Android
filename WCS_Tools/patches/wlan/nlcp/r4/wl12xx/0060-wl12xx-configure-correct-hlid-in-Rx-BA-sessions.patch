From e8ed173d1f26cb969ebfdcba7062ea4bd975923f Mon Sep 17 00:00:00 2001
From: Arik Nemtsov <arik@wizery.com>
Date: Wed, 18 May 2011 06:30:03 +0300
Subject: [PATCH 60/75] wl12xx: configure correct hlid in Rx BA sessions

Set the correct hlid when sending the Rx BA session initiation command
to the FW.
---
 drivers/net/wireless/wl12xx/acx.c  |    8 ++------
 drivers/net/wireless/wl12xx/acx.h  |    4 ++--
 drivers/net/wireless/wl12xx/main.c |   19 +++++++++++++++++--
 3 files changed, 21 insertions(+), 10 deletions(-)

diff --git a/drivers/net/wireless/wl12xx/acx.c b/drivers/net/wireless/wl12xx/acx.c
index 898798c..c148bce 100644
--- a/drivers/net/wireless/wl12xx/acx.c
+++ b/drivers/net/wireless/wl12xx/acx.c
@@ -1437,7 +1437,7 @@ out:
 
 /* setup BA session receiver setting in the FW. */
 int wl1271_acx_set_ba_receiver_session(struct wl1271 *wl, u8 tid_index,
-					 u16 ssn, bool enable)
+					 u16 ssn, bool enable, u8 peer_hlid)
 {
 	struct wl1271_acx_ba_receiver_setup *acx;
 	int ret;
@@ -1450,11 +1450,7 @@ int wl1271_acx_set_ba_receiver_session(struct wl1271 *wl, u8 tid_index,
 		goto out;
 	}
 
-	/*
-	 * TODO: in AP mode, specify appropriate sta hlid according to sta
-	 * passed to wl1271_op_ampdu_action
-	 */
-	acx->hlid = wl->sta_hlid;
+	acx->hlid = peer_hlid;
 	acx->tid = tid_index;
 	acx->enable = enable;
 	acx->win_size = RX_BA_WIN_SIZE;
diff --git a/drivers/net/wireless/wl12xx/acx.h b/drivers/net/wireless/wl12xx/acx.h
index 93d7cd5..b299d98 100644
--- a/drivers/net/wireless/wl12xx/acx.h
+++ b/drivers/net/wireless/wl12xx/acx.h
@@ -1302,8 +1302,8 @@ int wl1271_acx_set_ht_capabilities(struct wl1271 *wl,
 int wl1271_acx_set_ht_information(struct wl1271 *wl,
 				   u16 ht_operation_mode);
 int wl1271_acx_set_ba_initiator_policy(struct wl1271 *wl);
-int wl1271_acx_set_ba_receiver_session(struct wl1271 *wl, u8 tid_index, u16 ssn,
-				       bool enable);
+int wl1271_acx_set_ba_receiver_session(struct wl1271 *wl, u8 tid_index,
+					 u16 ssn, bool enable, u8 peer_hlid);
 int wl1271_acx_tsf_info(struct wl1271 *wl, u64 *mactime);
 int wl1271_acx_ps_rx_streaming(struct wl1271 *wl, bool enable);
 int wl1271_acx_max_tx_retry(struct wl1271 *wl);
diff --git a/drivers/net/wireless/wl12xx/main.c b/drivers/net/wireless/wl12xx/main.c
index 64cf377..abeaf6b 100644
--- a/drivers/net/wireless/wl12xx/main.c
+++ b/drivers/net/wireless/wl12xx/main.c
@@ -3554,6 +3554,7 @@ static int wl1271_op_ampdu_action(struct ieee80211_hw *hw,
 {
 	struct wl1271 *wl = hw->priv;
 	int ret;
+	u8 hlid;
 
 	wl1271_debug(DEBUG_MAC80211, "mac80211 ampdu action %d tid %d", action,
 		     tid);
@@ -3569,6 +3570,18 @@ static int wl1271_op_ampdu_action(struct ieee80211_hw *hw,
 		goto out;
 	}
 
+	if (wl->bss_type == BSS_TYPE_STA_BSS) {
+		hlid = wl->sta_hlid;
+	} else if (wl->bss_type == BSS_TYPE_AP_BSS) {
+		struct wl1271_station *wl_sta;
+
+		wl_sta = (struct wl1271_station *)sta->drv_priv;
+		hlid = wl_sta->hlid;
+	} else {
+		ret = -EINVAL;
+		goto out;
+	}
+
 	ret = wl1271_ps_elp_wakeup(wl);
 	if (ret < 0)
 		goto out;
@@ -3593,7 +3606,8 @@ static int wl1271_op_ampdu_action(struct ieee80211_hw *hw,
 			break;
 		}
 
-		ret = wl1271_acx_set_ba_receiver_session(wl, tid, *ssn, true);
+		ret = wl1271_acx_set_ba_receiver_session(wl, tid, *ssn, true,
+							 hlid);
 		if (!ret) {
 			wl->ba_rx_bitmap |= BIT(tid);
 			wl->ba_rx_session_count++;
@@ -3608,7 +3622,8 @@ static int wl1271_op_ampdu_action(struct ieee80211_hw *hw,
 			break;
 		}
 
-		ret = wl1271_acx_set_ba_receiver_session(wl, tid, 0, false);
+		ret = wl1271_acx_set_ba_receiver_session(wl, tid, 0, false,
+							 hlid);
 		if (!ret) {
 			wl->ba_rx_bitmap &= ~BIT(tid);
 			wl->ba_rx_session_count--;
-- 
1.7.0.4

